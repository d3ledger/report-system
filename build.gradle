buildscript {
    ext.kotlin_version = '1.3.10'
    ext.spring_boot_version = '2.1.4.RELEASE'
    ext.notary_version = '474c0b5eaff8a14d138a879fbb870201a5138664'
    ext.chain_adapter_client_version= '3339510465bc908b89bc09a35f150fc5f7c1ef92'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

plugins {
    id "org.sonarqube" version "2.7.1"
}

group = 'd3'
version = '1.0'

allprojects {
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'
    repositories {
        mavenCentral()
        // for Ktor
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

sourceCompatibility = 1.8

allprojects {
    dependencies {
        final def kotlinVersion = '1.3.10'
        final def springfoxSwagger2Version = '2.9.2'

        // kotlin related
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1'
        implementation 'io.github.microutils:kotlin-logging:1.6.24'
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

        implementation "io.springfox:springfox-swagger2:$springfoxSwagger2Version"
        implementation "io.springfox:springfox-swagger-ui:$springfoxSwagger2Version"
        implementation "org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version"


        //logging
        implementation 'org.slf4j:slf4j-api:1.7.5'
        implementation 'ch.qos.logback:logback-classic:1.2.3'
        implementation 'ch.qos.logback:logback-core:1.2.3'

        // unit tests
        testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
        // https://mvnrepository.com/artifact/org.mockito/mockito-all
        testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
        testCompile('com.nhaarman:mockito-kotlin:1.5.0') {
            exclude group: 'org.jetbrains.kotlin'
            exclude group: 'org.mockito'
        }
        testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

        testImplementation ('com.github.stefanbirkner:system-rules:1.18.0'){
            exclude group: 'junit'
        }
        // to run both junit4 and junit5 tests
        testRuntime("org.junit.vintage:junit-vintage-engine:5.2.0")
    }
}

subprojects {
    sourceSets {
        integrationTest {
            kotlin {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDirs += 'src/integration-test/kotlin'
            }
            resources {
                srcDirs = ["src/integration-test/resources"]
            }
        }
    }

    task integrationTest(type: Test) {
        group = LifecycleBasePlugin.VERIFICATION_GROUP
        description = 'Runs report-system integration tests'

        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath
        // Enable JUnit5 tests
        useJUnitPlatform {
        }
    }

    configurations {
        integrationTestImplementation.extendsFrom testImplementation
        integrationTestCompile.extendsFrom testCompile
        integrationTestRuntime.extendsFrom testRuntime
    }

    project.afterEvaluate {
        test.finalizedBy(integrationTest)
    }

    sonarqube {
        properties {
            property "sonar.github.repository", "d3ledger/report-system"
            property "sonar.projectKey", "d3:report-system"
            property "sonar.java.binaries", "${project.projectDir}/build/classes"
            property "sonar.java.libraries", "${project.projectDir}/build/libs"
            property "sonar.java.test.binaries", "${project.projectDir}/build/test-results/test/binary"
            property "sonar.exclusions", "**/integration-test/**"
        }
    }
}
wrapper {
    gradleVersion = 4.10
}

allprojects {
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
}