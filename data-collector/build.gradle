group 'd3'
version '1.0'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        //Spring-boot
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'application'
apply plugin: "kotlin-spring" // See https://kotlinlang.org/docs/reference/compiler-plugins.html#kotlin-spring-compiler-plugin
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'
apply plugin: 'idea'

version = '1.0'

dependencies {

    // Iroha Pure Java library
    implementation 'com.github.hyperledger.iroha-java:client:4.0.0'
    testImplementation('com.github.hyperledger.iroha-java:testcontainers:4.0.0') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    //Spring-boot
    implementation("org.springframework.boot:spring-boot-starter-web:$spring_boot_version") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:$spring_boot_version"
    implementation("org.springframework.boot:spring-boot-starter-amqp:$spring_boot_version")

    implementation 'org.liquibase:liquibase-maven-plugin:3.6.3'

    implementation "org.springframework.boot:spring-boot-starter-jetty:$spring_boot_version"

    implementation 'org.postgresql:postgresql:42.2.5'

    testImplementation "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
    testImplementation 'com.h2database:h2:1.4.199'
}

sourceCompatibility = 1.8

mainClassName = "com.d3.datacollector.CollectorMain"

task runCollector(type: JavaExec ) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    setWorkingDir("$rootDir/")
}


jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
}

tasks.withType(Test)  {
    maxParallelForks = 1
}

